/**
 * Fichier de configuration de gradle
 * http://tools.android.com/tech-docs/new-build-system/user-guide
 */

/**
 * Type du projet 
 */
 apply plugin: 'com.android.application'

/**
 * Dépôt & version de gradle à utiliser
 */
 buildscript {
 	repositories {
 		jcenter()
 		mavenCentral()
	}

	dependencies {
		classpath 'com.android.tools.build:gradle:1.1.3'
  	}
  }


/**
 * Affichage des warnings à la compilation
 */
allprojects {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:deprecation"
    }
}


/**
 * Mes dépôts
 */
repositories {
    mavenCentral()
}


/**
 * Librairies additionnelles du projet
 */
dependencies {
	compile 'com.android.support:appcompat-v7:21.+'
	compile 'org.jsoup:jsoup:1.8.1'
	compile 'commons-io:commons-io:2.2'
	testCompile 'junit:junit:4.12'
}


/**
 * Configuration Android avancée
 */
android {
	/**
 	 * Niveau de compilation
 	 */
	compileSdkVersion 21
	buildToolsVersion "21.1.2"

	/**
	 * Path des fichiers
	 */
	sourceSets {
		main {
			manifest.srcFile 'AndroidManifest.xml'
			java.srcDirs = ['src']

	 		resources.srcDirs = ['src']
			aidl.srcDirs = ['src']

			renderscript.srcDirs = ['src']

			res.srcDirs = ['res']
			assets.srcDirs = ['assets']
		}
		/**
		 * Path des tests
		 */
		androidTest.setRoot('src/com/pcinpact/tests')
	}

    /**
     * Configuration de Lint
     */
	lintOptions {
	    // Pas d'arrêt si des erreurs sont remontées 
	    abortOnError false
	    // Les warnings ne sont pas considérés comme erreurs
	    warningsAsErrors false
	    // Affichage complet des erreurs
	    showAll true
	    // Affichage des erreurs sous format texte
	    textReport true
	    // Affichage des erreurs sur stdout
	    textOutput 'stdout'
	}

/**
 * Test unitaires
 *--/
sourceSets {
    unitTest {
        java.srcDir file('src/com/pcinpact/tests')
        //resources.srcDir file('src/test/resources')
    }
}

configurations {
    unitTestCompile.extendsFrom runtime
    unitTestRuntime.extendsFrom unitTestCompile
}

dependencies {
    unitTestCompile files("$project.buildDir/classes/release")
}

task unitTest(type:Test, dependsOn: assemble) {
    description = "run unit tests"
    testClassesDir = project.sourceSets.unitTest.output.classesDir
    classpath = project.sourceSets.unitTest.runtimeClasspath
}

check.dependsOn unitTest*/
}